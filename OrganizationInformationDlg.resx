<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="erpErrorProvider.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEAIACoEAAAJgAAABAQAAABACAAaAQAAM4QAAAoAAAAIAAAAEAAAAABACAAAAAAAIAQ
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYIc5YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEdzFzCZu5DfAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABHcxcwR3MXEAAAAAAAAAAAAAAAAAAAAAAAAAAAfapxj5zOqP9HcxcwAAAAAAAA
        AAAAAAAAAAAAAAAAAABHcxcgR3MXIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEdzFxCYtonfg6lxgEdzFxAAAAAAAAAAAAAAAAB0q2nffrp5/1+V
        QY8AAAAAAAAAAAAAAABciz1Aga54n32kaa8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGiPR0Cr07f/g7uE71+SQnAAAAAAR3MXQFeK
        NP9Sgin/TH0e30dzFxBQgSdAaqFWv4rEkf+IvIvPR3MXEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACkfwBgpH8AgKR/AICkfwCApH8AgKR/AICkfwCApH8AgKR/AICkfwCApH8AgH+UQM+NyJb/cKtg/059
        JN9nm1L/fbd4/3m2b/9sqFf/VIgt/0+DJP9qp1T/ebJx/1qKOUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAARLLGv2qed+90mWP/dJlj/3SZY/90mWP/dJlj/3SZY/90mWP/dJlj/3SZY/9ulmL/e6lx/2aZ
        T/9vomD/jsmY/43Ilv+GwYn/f7p8/3e1bP9urlv/YaFC/1OKJf9ckDz/W406gAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABgwdL/su33/7Dt9/+u7ff/rO33/6vt+P+p7fj/p+34/6Xt+P+j7Pj/oez4/5DY
        2v9fj0v/mMGX/6DTs/+W0af/ks6f/4zHlP+FwIf/frl5/3azav9srVj/Y6ZC/1SPJf9MeiCPAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAGLB0v+57/f/t+/3/7Xu9/+07vf/su33/7Dt9/+u7ff/rO34/6rt
        +P+o7fj/f7qi/6LBm//A4M3/sNm//57TsP+V0ab/kc2d/4rFkv+EvoX/fbh2/3SyZv9rq1T/YqQ9/06C
        Hr8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY8HS/7/u9/++7vf/vO73/7rv9/+47/f/tu/3/7Xu
        9/+z7vf/se33/6/t9/+Du6L/r8qs/8rk1v+938v/rNe9/5vSrv+U0aX/kMyb/4nEkP+DvYP/e7d0/3Ox
        ZP9pqlH/Uocp7wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABlwdL/xe/1/8Tv9f/C7/b/wO/2/7/u
        9/+97vf/u+73/7nv9/+47/f/tu73/4e7of+1zLD/0ufd/8jk1P+73sj/qda6/5nSrP+U0KP/j8qZ/4jD
        jf+BvID/erZx/3GwYP9ZjzX/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGbC0v/L8PX/yfD1/8jv
        9f/G7/X/xe/1/8Pv9v/C7/b/wO/3/77u9/+87vf/i7uh/7jNs//c6+X/0ebc/8bj0v+43Mb/ptW3/5fS
        qv+T0KL/jsmX/4fBi/+Au37/eLVu/1ySPf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZ8LS/9Dx
        9f/O8fX/zfH1/8vw9f/K8PX/ye/1/8fv9f/G7/X/xO/1/8Pv9v+PvKH/wdK5/+ry7//X6OH/z+ba/8Ti
        0f+128P/otS1/5bSqP+Sz6D/jMiV/4bAif9/unv/YJRD/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABowtL/1fL1/9Px9f/S8fX/0fH1/8/x9f/O8fX/zfH1/8vw9f/K8PX/yO/1/5O8oP/C07r/7PTx/93r
        5v/W6OD/zeXZ/8Lhzv+y2sH/oNOy/5XRp/+Rzp7/i8aT/4W/hv9qn1b/R3MXQAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAGnC0v/Z8/X/1/L1/9by9f/V8vX/1PL1/9Px9f/S8fX/0PH1/8/x9f/N8fX/lr2g/8PT
        u//v9fP/4e3p/9zq5f/V6N//y+XX/7/gzP+v2L//ndOv/5XRpv+RzZz/isWR/3GnY/9HcxdAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAasLS/93z9v/c8/b/2/P1/9rz9f/Y8vX/1/L1/9by9f/V8vX/1PL1/9Px
        9f+lyLT/iqhy//j6+f/p8e//4Ozo/9rq5P/T597/yuTV/73fyv+r17z/mtKt/5TRpP+LxpL/VoYzz0dz
        FxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsw9L/4vX2/+D19v/f9Pb/3vT2/93z9v/c8/b/2vP1/9nz
        9f/Y8vX/1/L1/8Xi3v+FqHz/nLWG/+zx6v/2+ff/6fLv/9vq5P/R593/yOPU/7reyP+o1rn/icCP/1aG
        M+9HcxcQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG3D0v/l9fb/5PX2/+P19v/i9fb/4fX2/4qs
        e/97nmj/e55o/3qeaP96nmj/ep5o/42uhv9mjkr/a6hW/4m1b/+2x6T/3Ojf/9jp4v+20Lb/kbOD/8HV
        v//c6uX/R3MXcEdzF0BHcxdAR3MXQEdzF0BHcxdAR3MXQEdzF0AAAAAAbcPS/+n29//o9vb/5/b2/+b1
        9v/l9fb/x93M/4yreP+Tr3//7PTw/9Lo2/+i0K//gbmB/3qxc/98uHX/Woo2/36jav9ml07/V4gm/0yD
        N/+XhBP/0d7Q7+Pt6v/a6uT/y+XX/7Pawv+Z0qr/j8qZ/3y0dv9lnUy/TX4hUAAAAABuw9L/7Pf3/+v3
        9//q9vf/6fb3/+j29v/o9vb/5/X2/9Ll2v+4zbH/vc2v/+zy7v/D4c3/l9Ck/2mZUf/C3Mz/apRH/4LB
        Xv92rmv/YJk5/5N9BP+XsYJg3Off/+Ht6f/Y6eL/yOPU/5jEm+9yp2WPR3MXIAAAAAAAAAAAAAAAAG/E
        0//v+Pj/7vj4/+349//s+Pf/7Pf3/+v39//q9vf/6fb3/+j29v/d7uj/rMWi/6W7kf90nVv/xt3M/8Xd
        zP9soTX/xOHJ/6fWuP+Ixob/bH8M/wAAAACXsYJg0d/S/7DHqM92mlpgR3MXEAAAAAAAAAAAAAAAAAAA
        AAAAAAAAcMTT//L6+f/x+fn/8Pj4/+/4+P/u+Pj/7vj4/+349//s9/f/6/f3/+r29//q9vf/6fb3/9Tm
        2v/n9vb/5vX2/522iP/s9PD/xeLR/4e2g/97egr/AAAAAAAAAABHcxcgAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABwxNP/9Pv6//P6+v/z+vn/8vr5//H5+f/x+fn/7/j4/+/4+P/u+Pj/7fj4/+34
        9//s9/f/6/f3/+r29//p9vf/wNW//+Lq3f/V5dn/TopO/6R/AP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAHHE0//2+/r/9vv7//X7+//0+/v/9Pv6//P6+v/z+vn/8vr5//H5
        +f/w+fj/7/j4/+/4+P/u+Pj/7fj3/+z49//s9/f/kq16/4mmbP+CxML/pH8A/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAccXU//n9/P/4/Pv/9/z7//b7+//2+/r/9fv7//X7
        +//0+/v/8/r6//P6+f/y+vn/8vr5//H5+f/w+Pj/7/j4/+74+P/Z59z/r8aj/5jV3/+kfwD/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAByxdT/+/79//r9/P/6/fz/+f38//j9
        /P/4/Pv/9/z7//b7+v/2+/v/9fv7//X7+//0+/r/8/r6//P6+f/y+vn/8fn5//D5+f/v+Pj/mtXf/6R/
        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
</value>
  </data>
</root>